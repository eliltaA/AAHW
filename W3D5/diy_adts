class Stack
    def initialize
        stack_arr = []
    end

    def push(el)
        stack_arr << el
    end

    def pop
        stack_arr.pop
    end
    
    def peek
        stack_arr.last
    end

end

class Queue
    def initialize
        arr = []
    end

    def enqueue(el)
        arr.push(el)
    end

    def dequeue
        arr.shift
    end

    def peek 
        arr.first
    end
end

class Map
    def initialize
        arr = []
    end

    def set(key, value)
        sub_idx = arr.index {|sub_ar| sub_ar[0] == key}
        if sub_idx
            arr[sub_idx][1] = value
        else
            arr << [key, value]
        end
        value
    end

    def get(key)
        arr.each { |sub_ar| return sub_ar[1] if sub_ar[0] == key}
        nil
    end

    def delete(key)
        arr.reject! {|sub_ar| sub_ar[0] == key }
        value
    end

    def deep_dup(arr)
        arr.map {|el| el.is_a?(Array) ? deep_dup(el) : el}
    end
end